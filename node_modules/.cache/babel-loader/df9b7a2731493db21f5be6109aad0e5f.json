{"ast":null,"code":"var _jsxFileName = \"/home/bao/Documents/IPLBAC3/PFE/BABEL-frontend/src/Components/After_game/Results/Results.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport ResultAPI from '../../../API/ResultAPI.js';\n\nclass Result extends Component {\n  constructor() {\n    super();\n    this.state = {\n      listImages: [],\n      summary: [],\n      index: 0,\n      maxIndex: 0\n    };\n    this.api = new ResultAPI();\n    this.createSummary = this.createSummary.bind(this);\n  }\n\n  componentDidMount() {\n    this.createSummary(this.state.index);\n  }\n\n  handleClick(e) {\n    if (e.target.alt == \"suivant\") {\n      if (this.state.index < this.state.maxIndex) {\n        this.state.index += 1;\n      }\n    } else {\n      if (this.state.index >= 1) {\n        this.state.index -= 1;\n      }\n    }\n\n    this.createResult(this.state.index);\n  } //Il faudra gérer les différentes catégories en fonction de l'image\n\n\n  async createResult(index) {\n    //Can't seem to use setState somehow\n    //this.setState({listImages : this.api.getChildSummary()});\n    let sum = await this.api.getChildSummary();\n    this.setState({\n      maxIndex: sum.length - 1\n    }); //console.log(\"resp : \", sum)\n    //console.log(sum[0].date)\n\n    this.state.listImages = sum[index].images; //console.log(this.state.listImages);\n\n    let summary = [];\n    let list = this.state.listImages;\n\n    for (let i = 0; i < list.length; i++) {\n      let children = [];\n      let desc = list[i].name;\n      let path = \"Images/\" + desc + \".jpg\";\n\n      if (!summary.length) {\n        summary.push(React.createElement(\"img\", {\n          className: \"navigation\",\n          src: \"/Images/previous.png\",\n          alt: \"pr\\xE9c\\xE9dent\",\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }));\n        summary.push(React.createElement(\"img\", {\n          className: \"navigation\",\n          src: \"/Images/next.png\",\n          alt: \"suivant\",\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }));\n      }\n\n      children.push(React.createElement(\"img\", {\n        src: path,\n        alt: desc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n\n      if (list[i].like) {\n        children.push(React.createElement(\"img\", {\n          className: \"likes\",\n          src: \"/Images/like.png\",\n          alt: \"j'aime\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n      } else {\n        children.push(React.createElement(\"img\", {\n          className: \"likes\",\n          src: \"/Images/dislike.png\",\n          alt: \"je n'aime pas\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }));\n      }\n\n      if (list[i].help) {\n        children.push(React.createElement(\"img\", {\n          className: \"help\",\n          src: \"/Images/help.png\",\n          alt: \"j'ai besoin d'aide\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }));\n      } else {\n        children.push(React.createElement(\"img\", {\n          className: \"help\",\n          src: \"/Images/nohelp.png\",\n          alt: \"je n'ai pas besoin d'aide\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      }\n\n      if (list[i].happy) {\n        children.push(React.createElement(\"img\", {\n          className: \"happy\",\n          src: \"/Images/happy.png\",\n          alt: \"je suis content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      } else {\n        children.push(React.createElement(\"img\", {\n          className: \"happy\",\n          src: \"/Images/unhappy.png\",\n          alt: \"je ne suis pas content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      }\n\n      summary.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, children));\n    }\n\n    this.setState({\n      summary: summary\n    });\n    return this.state.summary;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"R\\xE9sultat du jeu\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), this.state.summary, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Result;","map":{"version":3,"sources":["/home/bao/Documents/IPLBAC3/PFE/BABEL-frontend/src/Components/After_game/Results/Results.jsx"],"names":["React","Component","Link","Button","ResultAPI","Result","constructor","state","listImages","summary","index","maxIndex","api","createSummary","bind","componentDidMount","handleClick","e","target","alt","createResult","sum","getChildSummary","setState","length","images","list","i","children","desc","name","path","push","like","help","happy","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport Button from 'react-bootstrap/Button';\n\nimport ResultAPI from '../../../API/ResultAPI.js'\n\nclass Result extends Component{\n\n    constructor(){\n        super();\n        this.state = {\n            listImages : [],\n            summary : [],\n            index : 0,\n            maxIndex : 0\n        }\n        this.api = new ResultAPI();\n        this.createSummary = this.createSummary.bind(this);\n    }\n\n    componentDidMount(){\n        this.createSummary(this.state.index);\n    }\n\n    handleClick(e){\n        if (e.target.alt == \"suivant\"){\n            if(this.state.index < this.state.maxIndex){\n                this.state.index += 1;\n            }\n        } else {\n            if(this.state.index >= 1){\n                this.state.index -= 1;\n            }\n        }\n        this.createResult(this.state.index);\n    }\n\n    //Il faudra gérer les différentes catégories en fonction de l'image\n    async createResult(index){\n        //Can't seem to use setState somehow\n        //this.setState({listImages : this.api.getChildSummary()});\n        let sum = await this.api.getChildSummary();\n        this.setState({maxIndex : sum.length-1})\n        //console.log(\"resp : \", sum)\n        //console.log(sum[0].date)\n        this.state.listImages = sum[index].images;\n        //console.log(this.state.listImages);\n        let summary = [];\n        let list = this.state.listImages;\n        for(let i = 0; i < list.length; i++){\n            let children = []\n            let desc = list[i].name;\n            let path = \"Images/\"+desc+\".jpg\";\n\n            if (!summary.length){\n                summary.push(<img className=\"navigation\" src=\"/Images/previous.png\" alt=\"précédent\" onClick={this.handleClick}/>)\n                summary.push(<img className=\"navigation\" src=\"/Images/next.png\" alt=\"suivant\" onClick={this.handleClick}/>)\n            }\n            children.push(<img src={path} alt={desc}/>)\n            if (list[i].like){\n                children.push(<img className=\"likes\" src=\"/Images/like.png\" alt=\"j'aime\"/>)\n            } else {\n                children.push(<img className=\"likes\" src=\"/Images/dislike.png\" alt=\"je n'aime pas\"/>)\n            }\n            if (list[i].help){\n                children.push(<img className=\"help\" src=\"/Images/help.png\" alt=\"j'ai besoin d'aide\"/>)\n            } else {\n                children.push(<img className=\"help\" src=\"/Images/nohelp.png\" alt=\"je n'ai pas besoin d'aide\"/>)\n            }\n            if (list[i].happy){\n                children.push(<img className=\"happy\" src=\"/Images/happy.png\" alt=\"je suis content\"/>)\n            } else {\n                children.push(<img className=\"happy\" src=\"/Images/unhappy.png\" alt=\"je ne suis pas content\"/>)\n            }\n            summary.push(<div>{children}</div>)\n        }\n        this.setState({summary : summary})\n        return this.state.summary;\n    }\n    \n\n    render(){\n        return(\n            <div className=\"container\">\n                <h1>Résultat du jeu</h1><br/><br/>\n                {this.state.summary}<br/>\n            </div>\n        )\n    }\n}\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}